{"version":3,"file":"static/js/299.c0d022ef.chunk.js","mappings":"2MAmDA,EA5CqC,SAAHA,GAAuB,IAAjBC,EAASD,EAATC,UAEpCC,GAAwBC,EAAAA,EAAAA,UAAqB,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAAoCL,EAAAA,EAAAA,UAAmB,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAnDE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAE1BG,EAAa,CAAC,eAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,SAAK,SAAK,SAAK,SAAK,UAW/H,OATAC,EAAAA,EAAAA,YAAU,WACNN,EAAQN,GAER,IAAMS,EAAaE,EAAWE,QAAO,SAAAC,GAAC,OAAIC,OAAOC,KAAKhB,EAAU,IAAIiB,SAASH,EAAE,IACzEI,EAAkBH,OAAOC,KAAKhB,EAAU,IAAIa,QAAO,SAAAC,GAAC,OAAKL,EAAWQ,SAASH,EAAE,IACrFJ,EAAc,GAADS,QAAAC,EAAAA,EAAAA,GAAKX,IAAUW,EAAAA,EAAAA,GAAKF,IAErC,GAAG,KAGCG,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,UACvBE,EAAAA,EAAAA,MAAA,SAAAF,SAAA,EACIF,EAAAA,EAAAA,KAAA,SAAAE,UACIF,EAAAA,EAAAA,KAAA,MAAAE,SAEKd,EAAWiB,KAAI,SAACC,GAAI,OACjBN,EAAAA,EAAAA,KAAA,MAAAE,SAAgBI,GAAPA,EAAiB,SAItCN,EAAAA,EAAAA,KAAA,SAAAE,SACKlB,EAAKqB,KAAI,SAACE,EAAKC,GAAK,OACjBR,EAAAA,EAAAA,KAAA,MAAAE,SAEKd,EAAWiB,KAAI,SAACC,GAAI,OACjBN,EAAAA,EAAAA,KAAA,MAAAE,SAAgBK,EAAID,IAAXA,EAAsB,KAH9BG,MAKJ,YAOjC,C","sources":["pages/component/EnhanchedTable.tsx"],"sourcesContent":["import React, { FC, useEffect, useState } from 'react';\nimport uuid from 'react-uuid';\nimport \"./css/enhanchedTable.css\"\n\ninterface DataItem {\n    [key: string]: any;\n}\nconst EnhanchedTable: FC<DataItem> = ({ json_data }) => {\n\n    const [data, setData] = useState<DataItem[]>([]);\n    const [fieldNames, setFieldNames] = useState<string[]>([]);\n\n    const fieldOrder = ['層數', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '長', '廣', '故', '琉', '東'];\n\n    useEffect(() => {\n        setData(json_data);\n\n        const fieldNames = fieldOrder.filter(f => Object.keys(json_data[0]).includes(f));\n        const remainingFields = Object.keys(json_data[0]).filter(f => !fieldNames.includes(f));\n        setFieldNames([...fieldNames, ...remainingFields]);\n\n    }, []);\n\n    return (\n        <>\n            <div className='table_view'>\n                <table>\n                    <thead>\n                        <tr>\n                            {/* 用欄位名稱來渲染表頭 */}\n                            {fieldNames.map((name) => (\n                                <th key={name}>{name}</th>\n                            ))}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {data.map((row, index) => (\n                            <tr key={uuid()}>\n                                {/* 用欄位名稱來取得對應的資料 */}\n                                {fieldNames.map((name) => (\n                                    <td key={name}>{row[name]}</td>\n                                ))}\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        </>\n    );\n};\n\nexport default EnhanchedTable;"],"names":["_ref","json_data","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","fieldNames","setFieldNames","fieldOrder","useEffect","filter","f","Object","keys","includes","remainingFields","concat","_toConsumableArray","_jsx","_Fragment","children","className","_jsxs","map","name","row","index","uuid"],"sourceRoot":""}